// pragma solidity ^0.5.0;

// contract Test {
//   constructor() public { b = hex"12345678901234567890123456789012"; }
//   event Event(uint indexed a, bytes32 b);
//   event Event2(uint indexed a, bytes32 b);
//   function foo(uint a) public { emit Event(a, b); }
//   bytes32 b;
// }

[
  //   function foo(uint a) public { emit Event(a, b); }
  {
    "constant": false,
    "inputs": [
      {
        "name": "a",
        "type": "uint256"
      }
    ],
    "name": "foo",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  //   constructor() public { b = hex"12345678901234567890123456789012"; }
  {
    "inputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  //   event Event(uint indexed a, bytes32 b);
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "a",
        "type": "uint256"
      },
      {
        "indexed": false,
        "name": "b",
        "type": "bytes32"
      }
    ],
    "name": "Event",
    "type": "event"
  },
  //   event Event2(uint indexed a, bytes32 b);
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "a",
        "type": "uint256"
      },
      {
        "indexed": false,
        "name": "b",
        "type": "bytes32"
      }
    ],
    "name": "Event2",
    "type": "event"
  }
]
